#include "imports/stdlib.fc";

;; storage: account_state + owner_address
;; note that account_state is an 8 bits signed integer variable to lock/unlock the account: lock: 0, unlock: -1

;; op codes(32 bits):
;; lock_account: 300
;; unlock_account: 400
;; deposit: 500
;; withdraw: 600

;; withdraw message body -> coins + receiver
;; withdraw send message mode: 1

;; exit codes:
;; only owner access: 250
;; already_locked: 260
;; already_unlock: 270
;; if withdrawal_amount >= balance: 280

;; get methods:
;; 1- get_account_state()
;; 2- my_balance() -> in nanoTON

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    if(in_msg_body.slice_bits() < 32){ ;; do not change it for deployment
        return ();
    }
       
}