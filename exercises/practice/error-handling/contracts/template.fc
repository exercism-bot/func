#include "imports/stdlib.fc";

;; write a function for each op-code which throws the corresponding exit-code!
;; only 10 most important and more useful exit codes are covered here
;; more information on exit codes can be found in the below links:
;; 1- https://docs.ton.org/learn/tvm-instructions/tvm-exit-codes
;; 2- https://docs.ton.org/develop/smart-contracts/testing/writing-test-examples#edge-cases-tests
;; 3- https://github.com/ton-community/fireworks-func/blob/main/contracts/fireworks.fc

;; use ~impure_touch() to force the compiler to not delete an unused variable from the stack

() exit_code_4() impure {

}

() exit_code_5() impure {

}

() exit_code_8() impure {

}

() exit_code_9() impure {

}

() exit_code_13() impure {

}

() exit_code_34() impure {

}

() exit_code_35() impure {

}

() exit_code_36() impure {

}

() exit_code_37() impure {

}

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    if(in_msg_body.slice_bits() == 0){ ;; don't change it in order to deploy the contract truly
        return ();
    }

    int exit_code = in_msg_body~load_uint(32);

    if(exit_code == 0) {
        return(); ;; just a simple return
    }

    if(exit_code == 4) {
        exit_code_4();
    }

    if(exit_code == 5) {
        exit_code_5();
    }

    if(exit_code == 8) {
        exit_code_8();
    }

    if(exit_code == 9) {
        exit_code_9();
    }

    if(exit_code == 13) {
        exit_code_13();
    }

    if(exit_code == 34) {
        exit_code_34();
    }

    if(exit_code == 35) {
        exit_code_35();
    }

    if(exit_code == 36) {
        exit_code_36();
    }

    if(exit_code == 37) {
        exit_code_37();
    }
}